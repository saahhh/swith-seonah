<!-- MembersMapper (myBatis) -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lm.swith.studyroom.mapper.StudyRoomMapper">
	
	<!-- insert -->
	<insert id="createStudyRoomNotice" parameterType="lm.swith.studyroom.model.StudyRoomNotice">
	INSERT INTO STUDY_ROOM_NOTICE(POST_NO, USER_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_PASSWORD)
	VALUES(#{post_no}, #{user_no}, #{notice_title}, #{notice_content}, #{notice_password})
	</insert>

	<insert id="createStudyMoment" parameterType="lm.swith.studyroom.model.StudyMoment">
	INSERT INTO STUDY_Moment(POST_NO, USER_NO, MOMENT_PICTURE, MOMENT_TITLE)
	VALUES(#{post_no}, #{user_no}, #{moment_picture}, #{moment_title})
	</insert>
	
	
	<!-- select -->
	<select id="findByUserNo" parameterType="lm.swith.user.model.SwithUser">
		SELECT * FROM Users WHERE USER_NO = #{user_no}
	</select>
	
	<select id="findByStudyNoticeWithNickname" parameterType="lm.swith.studyroom.model.StudyRoomNotice">
		SELECT SM.*, U.nickname
		FROM STUDY_ROOM_NOTICE SM
		JOIN Users U ON SM.USER_NO = U.USER_NO
		WHERE SM.POST_NO = #{post_no}
		ORDER BY notice_post_date DESC
	</select>
	
	<select id="findByStudyMoment" parameterType="lm.swith.studyroom.model.StudyMoment">
		SELECT SM.*,U.nickname
		FROM STUDY_MOMENT SM
		JOIN Users U ON SM.USER_NO = U.USER_NO
		WHERE SM.POST_NO = #{post_no} ORDER BY moment_post_date DESC
	</select>
	
	
	<!-- delete notice, moment -->
	<delete id="deleteStudyRoomNotice" parameterType="lm.swith.studyroom.model.StudyRoomNotice">g
		DELETE FROM STUDY_ROOM_NOTICE WHERE NOTICE_NO = #{notice_no} AND NOTICE_PASSWORD = #{notice_password}
	</delete>
	
	<delete id="deleteStudyMoment" parameterType="lm.swith.studyroom.model.StudyMoment">
		DELETE FROM STUDY_MOMENT WHERE USER_NO = #{user_no} AND MOMENT_NO = #{moment_no}
	</delete>
	
	
</mapper>